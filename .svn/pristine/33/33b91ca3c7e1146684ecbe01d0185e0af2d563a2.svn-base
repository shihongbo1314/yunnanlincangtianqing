<template>
  <div class="content">
    <div class="content_left">
      <el-card class="box_card">
        <ul>
          <li v-for="item in dataList" :key="item.id">
            <el-button
              :type="selectId == item.id ? 'primary' : ''"
              class="cBtn"
              round
              size="medium"
              @click="getStationList(item.id)"
              >{{ item.name }}</el-button
            >
            <span :class="{ no: !item.finish, yes: item.finish }">{{
              item.finish ? "已完成" : "未制作"
            }}</span>
          </li>
        </ul>
      </el-card>
    </div>
    <div class="content_right">
      <el-card class="box_card">
        <div class="header">
          <el-button
            style="float: right; margin-bottom: 20px"
            size="medium"
            type="success"
            @click="addSite()"
            >添加</el-button
          >
          <el-table
            :data="stationList"
            stripe
            border
            :header-cell-style="{ fontSize: '14px' }"
            :cell-style="{ fontSize: '14px' }"
            style="width: 100%"
          >
            <el-table-column type="index" label="序号" width="70">
            </el-table-column>
            <el-table-column prop="name" label="站点名称" width="180">
            </el-table-column>
            <el-table-column prop="lon" label="经度"> </el-table-column>
            <el-table-column prop="lat" label="纬度"> </el-table-column>
            <el-table-column prop="other" label="简介"> </el-table-column>
            <el-table-column prop="addr" label="站点地址" width="180">
            </el-table-column>
            <el-table-column label="操作" width="120">
              <template slot-scope="scope">
                <el-button
                  size="mini"
                  type="text"
                  icon="el-icon-edit"
                  class="warning"
                  @click="handleEdit(scope.$index, scope.row)"
                  >编辑</el-button
                >
                <el-button
                  size="mini"
                  type="text"
                  icon="el-icon-delete"
                  class="red"
                  @click="handleDelete(scope.$index)"
                  >删除</el-button
                >
              </template>
            </el-table-column>
          </el-table>
        </div>
        <el-dialog
          :title="dialogStatus"
          :visible.sync="dialogVisible"
          width="30%"
        >
          <el-form ref="form" :rules="rules" :model="form" label-width="110px">
            <el-form-item label="站点名称" prop="name">
              <el-input v-model="form.name" placeholder="请输入名称"></el-input>
            </el-form-item>
            <el-form-item label="纬度" prop="lat">
              <el-input
                type="tel"
                v-model="form.lat"
                placeholder="请输入纬度"
              ></el-input>
            </el-form-item>
            <el-form-item label="经度" prop="lon">
              <el-input
                type="mail"
                v-model="form.lon"
                placeholder="请输入经度"
              ></el-input>
            </el-form-item>
            <el-form-item label="其他文字信息" prop="other">
              <el-input
                type="mail"
                v-model="form.other"
                placeholder="请输入信息"
              ></el-input>
            </el-form-item>
            <el-form-item label="站点地址" prop="addr">
              <el-input
                type="mail"
                v-model="form.addr"
                placeholder="请输入地址"
              ></el-input>
            </el-form-item>
          </el-form>
          <span slot="footer" class="dialog-footer">
            <el-button @click="dialogVisible = false">取 消</el-button>
            <el-button
              type="primary"
              v-if="dialogStatus == '添加'"
              @click="addStation()"
              >确 定</el-button
            >
            <el-button
              type="primary"
              v-if="dialogStatus == '编辑'"
              @click="StationEdit()"
              >确 定</el-button
            >
          </span>
        </el-dialog>
      </el-card>
    </div>
  </div>
</template>

<script>
import {
  getDrainageBasin,
  getSiteList,
  addDrainageBasinSite,
  deleteSite,
} from "@/api/make.js";
import { saveAs } from "file-saver";
import { txtFileSetting } from "../../minx";
export default {
  name: "HydropowerStation",
  data() {
    return {
      value: "",
      selectId: "1",
      dataList: [], // 所有流域
      //流域站点列表
      stationList: [],
      fileList: [],
      dialogStatus: "",
      dialogVisible: false,
      form: {
        basinId: "",
        name: "",
        lat: "",
        lon: "",
        other: "",
        addr: "",
        id: null,
      },
      rules: {
        name: [{ required: true, message: "请输入站点名称", trigger: "blur" }],
        lat: [{ required: true, message: "请输入纬度", trigger: "blur" }],
        lon: [{ required: true, message: "请输入经度", trigger: "blur" }],
      },
    };
  },
  mixins: [txtFileSetting],
  mounted() {
    this.getData();
  },
  methods: {
    // 获得流域
    getData() {
      getDrainageBasin({}).then((res) => {
        if (res.data.state == 200) {
          this.dataList = res.data.records;
        }
        this.getStationList(this.selectId);
      });
    },
    // 获得流域下站点列表
    getStationList(id) {
      this.selectId = id;
      getSiteList({
        basinId: this.selectId,
      })
        .then((res) => {
          if (res.data.state == 200) {
            this.stationList = res.data.records;
          }
        })
        .catch((err) => {
          this.stationList = [];
          this.$message({
            message: err.data.stateStr,
            type: "error",
          });
        });
    },
    addSite() {
      this.dialogStatus = "添加";
      this.dialogVisible = true;
      this.form = {
        basinId: "",
        name: "",
        lat: "",
        lon: "",
        other: "",
        addr: "",
        id: null,
      };
    },
    // 添加流域下站点
    addStation() {
      if (this.dialogStatus == "添加") {
        addDrainageBasinSite({
          basinId: this.selectId,
          name: this.form.name,
          lat: this.form.lat,
          lon: this.form.lon,
          other: this.form.other,
          addr: this.form.addr,
          id: this.form.id,
        })
          .then((res) => {
            if (res.data.state == 200) {
              this.$message({
                message: "添加成功",
                type: "success",
              });
              this.getStationList(this.selectId);
            }
          })
          .catch((err) => {
            this.$message({
              message: err.data.stateStr,
              type: "error",
            });
          });
        this.dialogVisible = false;
      }
    },
    // 修改站点信息
    handleEdit(index, row) {
      this.dialogStatus = "编辑";
      this.form.basinId = row.selectId;
      this.form.name = row.name;
      this.form.lat = row.lat;
      this.form.lon = row.lon;
      this.form.other = row.other;
      this.form.addr = row.addr;
      this.form.id = row.id;
      this.dialogVisible = true;
    },
    // 编辑站点
    StationEdit() {
      if (this.dialogStatus == "编辑") {
        addDrainageBasinSite({
          basinId: this.form.basinId,
          name: this.form.name,
          lat: this.form.lat,
          lon: this.form.lon,
          other: this.form.other,
          addr: this.form.addr,
          id: this.form.id,
        })
          .then((res) => {
            if (res.data.state == 200) {
              this.$message({
                message: "编辑成功",
                type: "success",
              });
              this.getStationList(this.selectId);
            }
          })
          .catch((err) => {
            this.$message({
              message: err.data.stateStr,
              type: "error",
            });
          });
        this.dialogVisible = false;
      }
    },
    // 删除站点
    handleDelete(index, row) {
      // localStorage.getItem获取lcqxfzjz中的id
      var userId = JSON.parse(localStorage.getItem("lcqxfzjz")).id;
      console.log(userId);
      this.$confirm("此操作将永久删除该站点, 是否继续?", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning",
      }).then(() => {
        deleteSite({
          id: userId,
        })
          .then((res) => {
            if (res.data.state == 200) {
              this.$message({
                message: "删除成功",
                type: "success",
              });
              this.getStationList(this.selectId);
            }
          })
          .catch((err) => {
            this.$message({
              message: err.data.stateStr,
              type: "error",
            });
          });
      });
      // .catch(() => {
      //   this.$message({
      //     type: "info",
      //     message: "已取消删除",
      //   });
      // });
    },
  },
};
</script>

<style lang="less" scoped>
.content {
  height: 100%;
  display: flex;
  padding: 16px;
  font-size: 14px;
  & .box_card {
    height: 100%;
  }
  .content_left {
    width: 300px;
    ul {
      margin: 0;
      padding: 0;
      list-style: none;
      li {
        margin-bottom: 20px;
        .cBtn {
          width: 120px;
          font-size: 16px;
        }
        position: relative;
        span {
          position: absolute;
          right: 0;
          top: 50%;
          transform: translateY(-50%);
        }
        span.no {
          color: rgb(255, 72, 72);
        }
        span.yes {
          color: rgb(44, 202, 123);
        }
      }
    }
  }
  .content_right {
    flex: 1;
    padding-left: 16px;
    .header {
      padding-bottom: 20px;
    }
    .textareaClass {
      /deep/ textarea {
        resize: none;
        font-size: 18px;
      }
    }
  }
}
</style>